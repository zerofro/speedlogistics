<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zero.logistics.dao.TLogisticsDao">

    <resultMap type="com.zero.logistics.entity.TLogistics" id="TLogisticsMap">
        <result property="logisticsId" column="logistics_id" jdbcType="INTEGER"/>
        <result property="waybillId" column="waybill_id" jdbcType="INTEGER"/>
        <result property="staffId" column="staff_id" jdbcType="INTEGER"/>
        <result property="startDotId" column="start_dot_id" jdbcType="INTEGER"/>
        <result property="targetDotId" column="target_dot_id" jdbcType="INTEGER"/>
        <result property="logisticsType" column="logistics_type" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TLogisticsMap">
        select
          logistics_id, waybill_id, staff_id, start_dot_id, target_dot_id, logistics_type, create_time
        from speedlogisticsdb.t_logistics
        where logistics_id = #{logisticsId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TLogisticsMap">
        select
          logistics_id, waybill_id, staff_id, start_dot_id, target_dot_id, logistics_type, create_time
        from speedlogisticsdb.t_logistics
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TLogisticsMap">
        select
          logistics_id, waybill_id, staff_id, start_dot_id, target_dot_id, logistics_type, create_time
        from speedlogisticsdb.t_logistics
        <where>
            <if test="logisticsId != null">
                and logistics_id = #{logisticsId}
            </if>
            <if test="waybillId != null">
                and waybill_id = #{waybillId}
            </if>
            <if test="staffId != null">
                and staff_id = #{staffId}
            </if>
            <if test="startDotId != null">
                and start_dot_id = #{startDotId}
            </if>
            <if test="targetDotId != null">
                and target_dot_id = #{targetDotId}
            </if>
            <if test="logisticsType != null">
                and logistics_type = #{logisticsType}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="logisticsId" useGeneratedKeys="true">
        insert into speedlogisticsdb.t_logistics(waybill_id, staff_id, start_dot_id, target_dot_id, logistics_type)
        values (#{waybillId}, #{staffId}, #{startDotId}, #{targetDotId}, #{logisticsType})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update speedlogisticsdb.t_logistics
        <set>
            <if test="waybillId != null">
                waybill_id = #{waybillId},
            </if>
            <if test="staffId != null">
                staff_id = #{staffId},
            </if>
            <if test="startDotId != null">
                start_dot_id = #{startDotId},
            </if>
            <if test="targetDotId != null">
                target_dot_id = #{targetDotId},
            </if>
            <if test="logisticsType != null">
                logistics_type = #{logisticsType},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where logistics_id = #{logisticsId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from speedlogisticsdb.t_logistics where logistics_id = #{logisticsId}
    </delete>

    <select id="getByWaybillId" parameterType="int" resultType="com.zero.logistics.vo.LogisticsVO">
        SELECT MAX(CASE d.`dot_id` WHEN l.`start_dot_id` THEN d.`dot_name` ELSE NULL END) startDotName,
            MAX(CASE d.`dot_id` WHEN l.`target_dot_id` THEN d.`dot_name` ELSE NULL END) targetDotName,
            l.`logistics_type` logisticsType,l.`create_time` createTime
        FROM `t_waybill` w,`t_logistics` l,`t_dot` d
        WHERE l.`waybill_id` = w.`waybill_id` AND (l.`start_dot_id` = d.`dot_id`
        OR l.`target_dot_id` = d.`dot_id`) AND w.`waybill_id` = #{waybillId}
        GROUP BY l.`logistics_id`
    </select>

    <!--根据运单号获取物流详情列表-->
    <select id="getDetailList" resultType="com.zero.logistics.vo.LogisticsDetailVO">
        SELECT
            CASE s.sign_state
            WHEN 0 THEN
                '已签收，签收人凭取货码验收'
            WHEN 1 THEN
                CONCAT('已拒收,原因：',IFNULL(s.reject_reasons,'客户未填写'))
            ELSE
                NULL
        END `desc`,s.sign_time AS logTime
        FROM
            t_waybill w
            LEFT JOIN t_send s ON s.waybill_id = w.waybill_id
        WHERE w.waybill_code = #{waybillCode} AND s.sign_state IS NOT NULL
        UNION ALL
        SELECT
            CONCAT('派送员：',st.staff_name,'[',st.staff_phone,'] 正在为您派件') AS `desc`,
            s.send_time AS logTime
        FROM
            t_waybill w
            LEFT JOIN t_send s ON s.waybill_id = w.waybill_id
            LEFT JOIN t_staff st ON st.staff_id = s.staff_id
        WHERE w.waybill_code = #{waybillCode}
        UNION ALL
        SELECT
            CASE l.logistics_type
            WHEN -1 THEN
                CONCAT(d.dot_name,'[',d.dot_phone,']',' 已揽收')
            WHEN 0 THEN
                CONCAT(
                '已从 ',
                MAX(CASE l.start_dot_id WHEN d.dot_id THEN d.dot_name ELSE NULL END)
                ,' 发往 ',
                MAX(CASE l.target_dot_id WHEN d.dot_id THEN d.dot_name ELSE NULL END)
                )
            WHEN 1 THEN
                CONCAT('已到达 ',d.dot_name)
            ELSE
                NULL
        END `desc`,
            l.create_time AS logTime
        FROM
            t_waybill w
            LEFT JOIN t_logistics l ON l.waybill_id = w.waybill_id
            LEFT JOIN t_dot d ON d.dot_id = l.start_dot_id
            OR d.dot_id = l.target_dot_id
        WHERE w.waybill_code = #{waybillCode}
        GROUP BY l.logistics_id
        ORDER BY logTime DESC
    </select>

</mapper>